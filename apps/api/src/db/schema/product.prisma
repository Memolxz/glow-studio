model Product {
  id                 Int                 @id @default(autoincrement())
  name               String
  brand              String
  description        String
  officialUrl        String
  imageUrl           String?
  price              Decimal?
  category           ProductCategoryType
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  rating             Float?
  bodyPart           BodyPart            @default(FACE)
  sephoraCategoryId  String?
  productComments    ProductComment[]
  productIngredients ProductIngredient[]
  recommendations    Recommendation[]
}

model ProductIngredient {
  productId    Int
  ingredientId Int
  ingredient   Ingredients @relation(fields: [ingredientId], references: [id], onDelete: Cascade)
  product      Product     @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([productId, ingredientId])
  @@index([ingredientId])
}

model ProductComment {
  id        Int      @id @default(autoincrement())
  productId Int
  userId    Int?
  content   String
  rating    Float
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      Users?    @relation(fields: [userId], references: [id])

  @@index([productId])
  @@index([userId])
}

enum ProductCategoryType {
  SERUM
  CLEANSER
  TONER
  SUNSCREEN
  MASK
  MOISTURIZER
  EXFOLIANT
  TREATMENT
  EYE_CREAM
  FACIAL_OIL
  MIST
  ESSENCE
}

enum BodyPart {
  FACE
  EYES
  BODY
  GENERAL
}
